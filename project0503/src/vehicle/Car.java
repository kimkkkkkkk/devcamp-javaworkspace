package vehicle;

	//엔진을 보유
	//Car has a Engine
	/*
		특정 클래스가, 다른 클래스를 멤버변수로 보유한 경우, 이를 가리켜 has a 관계라 한다.
		참고로, 자바와 같은 oop언어에서는 객체들간 관계란 크게 2가지가 있다..
		1) is a 관계 : 상속관계
		2) has a 관계 : 부품관계
		- oop기반으로 개발을 하다보면, 여러 클래스로 개발을 하게되어 이 클래스들간에는 관계를 형성
		할 수 있는데, 이 때 관계란 is a, has a 관계로 분류된다.
	*/
public class Car{
	Engine e; // 클래스가 클래스를 보유함, 객체자료형은 최소한의 관여를 할 수 있다? 없다?
				 // 여기에 값이 들어와야하는데..개발자가 정의 한 것이라서  최소한 관여는 불가능하다.
				 //데이터 베이스 원칙을 따름 , null로 초기화 됨 null은 아무런 데이터가 들어있지 않다는 뜻, db와 동일..
				 
	Wheel w; //객체를 부품관계로 명시하려면 멤버변수로 보유하라!
	int price; //defualt 값 0 기본자료형
	String color; // S가 대문자인 이유는 객체자료형이란 뜻 
					 // 객체자료형은 최소한의 관여를 할 수 있다? 없다?
					// String도 객체이므로, null로 초기화되어있음 (개발자가 아무것도 초기화 안했을때..)
	
	// 부품 관계를 선언했다면, 초기화는 더욱 더 절실하다!! 초기화를 담당하는 영역은 바로 생성자이다!!
	// 즉 생성자를 적극 활용할 필요가 있다...
	public Car(){
		//has a  관계에 명시한, 데이터들의 인해 변수에 대한 필요한 모든 초기화를 시도!!

	e = new Engine(); //자동차 클래스가 엔진이란 클래스를 멤버로 보유했다를 has a 관계라 한다.
	w= new Wheel(); 
	price = 5000;
	color= "red";
	}
}
