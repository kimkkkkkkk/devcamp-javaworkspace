package app0601.json.chat;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

public class ChatServer extends JFrame{
	JPanel p_north;
	JTextField t_port;
	JButton bt;
	JTextArea area;
	JScrollPane scroll;
	
	ServerSocket server; //접속을 받아드릴 준비완료 
	Thread serverThread; // 서버 가동에 사용되는 쓰레드, 특히 접속자 감지에서 메인쓰레드로 하여금
	
	public ChatServer() {
		//생성 
		p_north = new JPanel();
		t_port = new JTextField(10);
		bt = new JButton("서버가동");
		area = new JTextArea();
		scroll  =new JScrollPane(area);
		
		//add
		p_north.add(t_port);
		p_north.add(bt);
		add(p_north, BorderLayout.NORTH);
		add(scroll);
		
		//event 
		bt.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				serverThread = new Thread() { // 내부익명
					public void run() {
						runServer();
	
					}	
				};
				serverThread.start();
			}
		});
		
		//view
		setVisible(true);
		setBounds(0, 100, 300, 400);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
	}
	
	public void runServer() {
		int port = Integer.parseInt(t_port.getText());
		try {
			server =new ServerSocket(port);
			area.append("서버가동\n");
			while(true) {
				Socket socket=server.accept(); //대기 상태에 빠지는 코드는 절대로 메인 쓰레드로 처리하지 말자!!
				String ip =socket.getInetAddress().getHostAddress();
				area.append(ip+"접속자 발견\n");
			} // 끝없이 접속자를 받겠다 while 문
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public static void main(String[] args) {
		new ChatServer();
	}

}