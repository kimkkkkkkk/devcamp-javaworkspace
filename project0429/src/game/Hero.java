package game;

/*js와 마찬가지로. 객체의 인스턴스를 생성할때 초기화 작업을 담당하게 될
메서드를 가리켜 생성자 메서드라 한다.. 단 대부분의 oop언어(java,c#등)
에서는 생성자 메서드명은 클래스명과 일치시켜야 한다!!!
java 생성자의 특징
1) 반환형을 두면 안된다!!(그냥 초기화 목적이므로...)
2) 생성자의 명칭은 반드시 해당 클래스와 일치해야 한다
*/

//앞에 default -> 같은 패키지만 접근
public class Hero{ //왜 public(공개)으로 해놨을까 class는 쓰라고 만든것이기 때문에...클래스는 보안과 상관없고 보이냐 안보이냐가 문제 
						  // 항상 열어두기 보안은 클래스 안에서...
	int width; // 여기서 부터 y까지 멤버변수
	int height;
	int x; // 값 0  들어있음
	int y; // 값 0  들어있음

	//다음과 같이 개발자가 초기화의 의지를 갖고, 생성자를 정의하면 시스템에 의한 즉 컴파일러에
	//의한 디폴트 생성자는 정의되지 않는다.. 따라서 현재 클래스내의 생성자의 수는 1개이다!!
	public Hero(int x, int y){
		this.x=x;
		this.y=y;

	//여기안에 들어가는 건 지역변수
	}

	//생성자 이름이 같지만, 매개변수로 구분이
	//가능한 오버로딩을 사용할 수 있다...
	public Hero(){ //2번째 방법 
		this.x=x;
		this.y=y;
	}
	//개발자가 생성자를 통한 초기화를 하지 않으면, 이 객체를 생성하는 new 연산자
	//다음에 오는 생성자 호출시 에러가 발생하게 되므로,,sun에서는 이를 방지하기 위해
	//개발자가 정의해야 할 생성자를 살짝 디폴트 생성자라는 역할로 정의해  놓는다...
	//즉 시스템에 의해 생성자가 정의된다.. 이때 시스템에 의한 생성자 정의라는 관여는
	//최대한 관여? 최소한 관여? ,이때 최소한의 관여만 하게 되므로, 시스템에 의한 디폴트
	//생성자의 코드엔 아무것도 들어있지 않다... 즉 코드가 empty 생성자이다...
	/*
	public Hero(){
		
		시스템에 의해 디폴트 생성자가 정의된다.
	}
	*/
}

